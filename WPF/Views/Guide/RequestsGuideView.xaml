<Window x:Class="Tourist_Project.WPF.Views.Guide.RequestsGuideView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ns="clr-namespace:Tourist_Project"
        mc:Ignorable="d"
        Title="Tourist application" Height="800" Width="1100">
    <Window.Resources>
        <Style x:Key="AcceptButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{DynamicResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/acceptIcon.png" Margin="5" Height="25"></Image>
                            <TextBlock Text="{ns:Loc AcceptTour}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AcceptPartButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{DynamicResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/acceptIcon.png" Margin="5" Height="25"></Image>
                            <TextBlock Text="{ns:Loc AcceptTourPart}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RequestsStat" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{DynamicResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/statisticsGuideIcon.png" Margin="5" Height="25"></Image>
                            <TextBlock Text="{ns:Loc RequestsStat}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SearchButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{DynamicResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/search.png" Margin="5" Height="15"></Image>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="S" Command="{Binding StatisticsCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Command="{Binding SearchCommand}"></KeyBinding>
    </Window.InputBindings>

    <Grid x:Name="Window">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid x:Name="LeftGrid" Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="300"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid x:Name="ProfileGrid" Grid.Row="0" Style="{StaticResource LeftGrid}">
                <Image Source="/Images/profile.jpg" Width="200" Height="200" Margin="0 0 0 30" Style="{StaticResource GuideProfileImage}" >
                    <Image.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding ProfileViewCommand, Mode=OneTime}" />
                    </Image.InputBindings>
                </Image>
                <Label Margin="10 240 10 25" Content="Luka Todorovic" HorizontalAlignment="Center" FontSize="20" Style="{StaticResource GuideName}"></Label>
                <Label Margin="10 270 10 0" Content="Guide" HorizontalAlignment="Center" FontSize="15"></Label>
            </Grid>
            <Grid x:Name="ButtonsGrid" Grid.Row="1" Style="{StaticResource LeftGrid}">
                <xctk:IconButton Width="200" Height="40" Margin="50,14,50,377"  Command="{Binding HomeCommand}" Style="{StaticResource HomeButtonGuide}"/>
                <xctk:IconButton Width="200" Height="40" Margin="50,60,50,304" Command="{Binding AcceptCommand}"  Style="{StaticResource AcceptButton}" />
                <xctk:IconButton Width="200" Height="40" Margin="50,107,50,227"   Style="{StaticResource AcceptPartButton}" Command="{Binding AcceptPartCommand}"/>
                <xctk:IconButton Width="200" Height="40" Margin="50,171,50,163" Command="{Binding StatisticsCommand}" Style="{StaticResource RequestsStat}"/>

                <xctk:IconButton Width="70" Height="24" Style="{StaticResource SerbianStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50 0 0 50"></xctk:IconButton>
                <xctk:IconButton Width="70" Height="24" Style="{StaticResource EnglishStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50 0 0 20"></xctk:IconButton>

                <xctk:IconButton Width="75" Height="24" Style="{StaticResource DarkStyleButton}" Command="{Binding ToDarkThemeCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0 0 50 50"></xctk:IconButton>
                <xctk:IconButton Width="75" Height="24" Style="{StaticResource LightStyleButton}" Command="{Binding ToLightThemeCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0 0 50 20"></xctk:IconButton>
            </Grid>
        </Grid>
        <Grid x:Name="RightGrid" Grid.Column="1" Grid.Row="0" Style="{StaticResource MainGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="160"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Label x:Name="TitleForWindow" Grid.Row="0" Margin="10,43,0,47" Content="{ns:Loc Requests}" FontSize="35" HorizontalAlignment="Left" Width="390"></Label>
            <Label x:Name="DateAndTime" Grid.Row="0" Margin="0,40,20,0" Content="{Binding CurrentTime}" FontSize="35" VerticalAlignment="Top" HorizontalAlignment="Right" Width="327" Height="50" HorizontalContentAlignment="Right"/>

            <ComboBox Grid.Row="0" Width="150" Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,120,304,0" ItemsSource="{Binding Filters}" SelectedItem="{Binding PickedFilter, UpdateSourceTrigger=PropertyChanged}" BorderThickness="3"></ComboBox>
            <TextBox Grid.Row="0" Width="180" Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,120,94,0" Text="{Binding SearchBox}"></TextBox>
            <xctk:IconButton Grid.Row="0" Width="30" Height="25" Margin="0,120,50,15" Command="{Binding SearchCommand}" HorizontalAlignment="Right" Style="{StaticResource SearchButton}"></xctk:IconButton>

            <DataGrid x:Name="FutureToursGrid" Grid.Row="1" Margin="20,0,20,20"
                      ItemsSource="{Binding TourRequests}"
                      SelectedItem="{Binding SelectedRequest}"
                      Style="{StaticResource DataGridStyle}"
                      Cursor="Hand">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{ns:Loc LocationTable}" Binding="{Binding Location}" Width="150"></DataGridTextColumn>
                    <DataGridTextColumn Header="{ns:Loc DescriptionTable}" Binding="{Binding Description}" Width="*"></DataGridTextColumn>
                    <DataGridTextColumn Header="{ns:Loc LanguageTable}" Binding="{Binding Language}" Width="100"></DataGridTextColumn>
                    <DataGridTextColumn Header="{ns:Loc NumberOfTourists}" Binding="{Binding GuestsNumber}" Width="120"></DataGridTextColumn>
                    <DataGridTextColumn Header="{ns:Loc FromDate}" Binding="{Binding FromDate}" Width="85"></DataGridTextColumn>
                    <DataGridTextColumn Header="{ns:Loc UntilDate}" Binding="{Binding UntilDate}" Width="85"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <StatusBar x:Name="StatusBar" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
            <TextBlock Text="{ns:Loc Requests}" FontSize="15" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30 0 0 0 "/>
        </StatusBar>
    </Grid>
</Window>
