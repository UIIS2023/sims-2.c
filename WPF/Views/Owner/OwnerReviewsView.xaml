<Window x:Class="Tourist_Project.WPF.Views.Owner.OwnerReviewsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tourist_Project.WPF.Views"
        mc:Ignorable="d"
        Title="OwnerReviewsView" Height="512" Width="670" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
    <Window.Resources>
        <DataTemplate x:Key="ReviewDataTemplate">
            <Grid Width="620">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Border CornerRadius="20, 10, 20, 10" 
                        BorderThickness="1"
                        BorderBrush="#03888f">
                    <Grid Margin="5">
                        <Label Content="Accommodation name:" FontSize="22" FontWeight="SemiBold" Margin="10,5"></Label>
                        <Label Content="{Binding Accommodation.Name}" Foreground="#F76A14" FontStyle="Italic" FontWeight="SemiBold" FontSize="22" Margin="315,5,0,5"></Label>
                        <Label Content="Guest name:" FontSize="22" FontWeight="SemiBold" Margin="10, 50, 10,5"></Label>
                        <Label Content="{Binding Guest.FullName}" Foreground="#F76A14" FontStyle="Italic" FontWeight="SemiBold" FontSize="22" Margin="315, 50, 10, 5"></Label>
                        <Label Content="Checked in:" FontSize="16" FontWeight="SemiBold" Margin="10,95,10,5"></Label>
                        <Label Content="{Binding Reservation.CheckIn}" Foreground="#F76A14" FontStyle="Italic" FontWeight="SemiBold" FontSize="16" Margin="315,95,10,5"></Label>
                        <Label Content="Checked out:" FontSize="16" FontWeight="SemiBold" Margin="10,140,10,5"></Label>
                        <Label Content="{Binding Reservation.CheckOut}" Foreground="#F76A14" FontStyle="Italic" FontWeight="SemiBold" FontSize="16" Margin="315,140,10,5"></Label>
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                <GradientStop Color="#acdcdc" Offset="0.8"></GradientStop>
                                <GradientStop Color="#d9eeef"></GradientStop>
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                            <GradientStop Color="#acdcdc" Offset="0.8"></GradientStop>
                            <GradientStop Color="#d9eeef"></GradientStop>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Grid Grid.Row="1">
                    <Border Height="220"
                            Width="290"
                            HorizontalAlignment="Right"
                            Margin="10,-50,5,10"
                            CornerRadius="20,10,20,10">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding Image.Url}"></ImageBrush>
                        </Border.Background>
                    </Border>
                    <Label Content="Cleanness:" Margin="10,10,0,10"></Label>
                    <Label Content="{Binding AccommodationRating.Cleanness}" Margin="268,10,0,10"></Label>
                    <Label Content="/5" Margin="279,10,0,10"></Label>
                    <Label Content="Owner:" Margin="10,50,0,10"></Label>
                    <Label Content="{Binding AccommodationRating.OwnerRating}" Margin="268,50,0,10"></Label>
                    <Label Content="/5" Margin="279,50,0,10"></Label>
                    <Label Content="Accommodation:" Margin="10,90,0,10"></Label>
                    <Label Content="{Binding AccommodationRating.AccommodationGrade}" Margin="268,90,0,10"></Label>
                    <Label Content="/5" Margin="279,90,0,10"></Label>
                    <Label Content="Additional comment:" Margin="10,130,0,10"></Label>
                    <TextBox Text="{Binding AccommodationRating.Comment}" HorizontalAlignment="Left" IsReadOnly="True" Width="290" Height="50" Focusable="False" FontSize="16" Margin="10,120,0,10"></TextBox>
                    <Button Content="Update accommodation(U)" Command="{Binding UpdateCommand}" Height="38" Width="290" HorizontalAlignment="Left" Margin="10,240,100,10"></Button>
                    <Button Content="Renovate accommodation(R)" Command="{Binding RenovateCommand}" Height="38" Width="290" HorizontalAlignment="Right" Margin="10,240,10,10"></Button>
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#acdcdc" Offset="0.6"></GradientStop>
                            <GradientStop Color="#d9eeef" Offset="0.1"></GradientStop>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
            </Grid>
        </DataTemplate>
        <Style x:Key="{x:Type Label}" TargetType="Label">
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>
        <Style x:Key="{x:Type Button}" TargetType="Button">
            <Setter Property="Background" Value="#03888f"></Setter>
            <Setter Property="Foreground" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#0fbdc6"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#376f72"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10,5,10,5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#edf6f7"></Setter>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="BorderBrush" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <Border CornerRadius="20,10,20,10"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="5">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#a5e2e5" />
                            </MultiTrigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                                <Setter Property="IsSelected" Value="False"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
        </Style>
        <Style x:Key="{x:Type Thumb}" TargetType="Thumb">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border CornerRadius="5"
                                    BorderBrush="#0da2a5"
                                    BorderThickness="1"
                                    Background="#0da2a5"></Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#d9eeef" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="18"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5"
                                    BorderThickness="0"></Border>
                            <RepeatButton Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineUpButton" Command="ScrollBar.LineUpCommand" Height="18" Content="▲" Background="#d9eeef" />
                            <Track x:Name="Track" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="1" IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="#d9eeef" Height="Auto" Width="Auto"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineDownButton" Command="ScrollBar.LineDownCommand" Height="18" Content="▼" Background="#d9eeef" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Height" Value="10"></Setter>
                                <Setter TargetName="Track" Property="IsDirectionReversed" Value="False"></Setter>
                                <Setter TargetName="Track" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="Track" Property="Grid.RowSpan" Value="3"></Setter>
                                <Setter TargetName="Track" Property="Grid.Column" Value="1"></Setter>
                                <Setter TargetName="Track" Property="Grid.ColumnSpan" Value="2"></Setter>
                                <Setter TargetName="Track" Property="Margin" Value="-25,0,2,0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Content" Value="◄" />
                                <Setter TargetName="LineUpButton" Property="Width" Value="18" />
                                <Setter TargetName="LineUpButton" Property="Height" Value="18"></Setter>
                                <Setter TargetName="LineUpButton" Property="Command" Value="ScrollBar.LineLeftCommand"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Column" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Column" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Command" Value="ScrollBar.LineRightCommand"></Setter>
                                <Setter TargetName="LineDownButton" Property="Content" Value="►" />
                                <Setter TargetName="LineDownButton" Property="Width" Value="18" />
                                <Setter TargetName="Thumb" Property="Width" Value="10" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CancelCommand}"></KeyBinding>
        <KeyBinding Key="U" Command="{Binding UpdateCommand}"></KeyBinding>
        <KeyBinding Key="R" Command="{Binding RenovateCommand}"></KeyBinding>
    </Window.InputBindings>
    <Grid>
        <ListBox Background="#d9eeef" Height="475" ItemsSource="{Binding Reviews, UpdateSourceTrigger=PropertyChanged}"
                 ItemTemplate="{StaticResource ReviewDataTemplate}"
                 SelectedItem="{Binding SelectedReview}"></ListBox>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#acdcdc" Offset="0.6"></GradientStop>
                <GradientStop Color="#d9eeef" Offset="0.1"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>
    </Grid>
</Window>
