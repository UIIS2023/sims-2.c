<Window x:Class="Tourist_Project.WPF.Views.Owner.ShowRenovations"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tourist_Project.WPF.Views.Owner"
        xmlns:viewModels="clr-namespace:Tourist_Project.WPF.ViewModels"
        mc:Ignorable="d"
        Title="ShowRenovations" Height="650" Width="450" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="{x:Type GroupBox}" TargetType="GroupBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
        <Style x:Key="{x:Type Label}" TargetType="Label">
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
        </Style>
        <Style x:Key="{x:Type Button}" TargetType="Button">
            <Setter Property="Height" Value="38"></Setter>
            <Setter Property="Background" Value="#03888f"></Setter>
            <Setter Property="Foreground" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#0fbdc6"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#376f72"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type Grid}" TargetType="Grid">
            <Setter Property="Background" Value="#d9eeef"></Setter>
        </Style>
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="BorderBrush" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <Border CornerRadius="20,10,20,10"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="5">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                    Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#a5e2e5" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
        </Style>
        <Style x:Key="{x:Type Thumb}" TargetType="Thumb">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border CornerRadius="5"
                                        BorderBrush="#0da2a5"
                                        BorderThickness="1"
                                        Background="#0da2a5"></Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#d9eeef" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="18"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5"
                                        BorderThickness="0"></Border>
                            <RepeatButton Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineUpButton" Command="ScrollBar.LineUpCommand" Height="18" Content="▲" />
                            <Track x:Name="Track" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="1" IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="white" Height="Auto" Width="Auto"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineDownButton" Command="ScrollBar.LineDownCommand" Height="18" Content="▼" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Height" Value="10"></Setter>
                                <Setter TargetName="Track" Property="IsDirectionReversed" Value="False"></Setter>
                                <Setter TargetName="Track" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="Track" Property="Grid.RowSpan" Value="3"></Setter>
                                <Setter TargetName="Track" Property="Grid.Column" Value="1"></Setter>
                                <Setter TargetName="Track" Property="Grid.ColumnSpan" Value="2"></Setter>
                                <Setter TargetName="Track" Property="Margin" Value="-25,0,2,0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Content" Value="◄" />
                                <Setter TargetName="LineUpButton" Property="Width" Value="18" />
                                <Setter TargetName="LineUpButton" Property="Height" Value="18"></Setter>
                                <Setter TargetName="LineUpButton" Property="Command" Value="ScrollBar.LineLeftCommand"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Column" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Column" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Command" Value="ScrollBar.LineRightCommand"></Setter>
                                <Setter TargetName="LineDownButton" Property="Content" Value="►" />
                                <Setter TargetName="LineDownButton" Property="Width" Value="18" />
                                <Setter TargetName="Thumb" Property="Width" Value="10" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="RenovationTemplate">
            <Grid>
                <Label Content="Accommodation name:" FontWeight="DemiBold" Margin="10,10,10,10"></Label>
                <Label Content="{Binding Accommodation.Name}" Foreground="#F76A14" FontStyle="Italic" Margin="20,45,20,20"></Label>
                <Label Content="Location:" FontWeight="DemiBold" Margin="10,80,10,10"></Label>
                <Label Content="{Binding Location}" Foreground="#F76A14" FontStyle="Italic" Margin="20,115,50,50"></Label>
                <Label Content="Renovation span:" FontWeight="DemiBold" Margin="200,10,10,10"></Label>
                <Label Content="{Binding Renovation.RenovatingSpan.StartingDate}" Foreground="#F76A14" FontStyle="Italic" Margin="210,40,10,10"></Label>
                <Label Content="{Binding Renovation.RenovatingSpan.EndingDate}" Foreground="#F76A14" FontStyle="Italic" Margin="210,70,10,10"></Label>
                <Label Content="Owner:" FontWeight="DemiBold" Margin="10,150,10,10"></Label>
                <Label Content="{Binding User.FullName}" FontStyle="Italic" Foreground="#F76A14" Margin="20,185,20,40"></Label>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="C" Command="{Binding CancelCommand}"></KeyBinding>
        <KeyBinding Key="Escape" Command="{Binding ExitCommand}"></KeyBinding>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Content="Current and scheduled renovations:" Margin="20,10,10,100" FontSize="20" FontWeight="DemiBold"></Label>
        <Label Grid.Row="1" Content="Previous renovations:" Margin="20,10,200,10" FontSize="20" FontWeight="DemiBold"></Label>
        <ListBox Grid.Row="0"  Height="230" Width="390" Margin="20" VerticalAlignment="Bottom" FlowDirection="LeftToRight"
                  ItemsSource="{Binding ScheduledRenovations, UpdateSourceTrigger=PropertyChanged}"
                  ItemTemplate="{StaticResource RenovationTemplate}"
                  SelectedItem="{Binding SelectedRenovation}">
        </ListBox>
        <Button Grid.Row="0" Content="Cancel(C)" Command="{Binding CancelCommand}" Margin="230,210,50,10"></Button>
        <ListBox Grid.Row="1" Height="230" Width="390" Margin="20" VerticalAlignment="Bottom"
                 ItemsSource="{Binding PreviousRenovations, UpdateSourceTrigger=PropertyChanged}"
                 ItemTemplate="{StaticResource RenovationTemplate}">
        </ListBox>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#acdcdc" Offset="0.6"></GradientStop>
                <GradientStop Color="#d9eeef" Offset="0.1"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>
    </Grid>
</Window>
