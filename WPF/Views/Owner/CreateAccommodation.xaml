<Window x:Class="Tourist_Project.WPF.Views.Owner.CreateAccommodation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tourist_Project.WPF.Views.Owner"
        xmlns:vm="clr-namespace:Tourist_Project.WPF.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:val="clr-namespace:Tourist_Project.WPF.Validation"
        xmlns:converters="clr-namespace:Tourist_Project.WPF.Converters"
        mc:Ignorable="d"
        Title="CreateAccommodation" Height="733" Width="370" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <converters:RadioToEnumConverter x:Key="RadioToEnumConverter" />
        <ControlTemplate x:Key="ValidationTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                        <GradientStop Color="#03888f" Offset="0.8"></GradientStop>
                        <GradientStop Color="#0da2a5"></GradientStop>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#0da2a5"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#376f72"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="#03888f"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Ellipse x:Name="RadioEllipse"
                                     Width="15"
                                     Height="15"
                                     Stroke="#03888f"
                                     StrokeThickness="1"
                                     Fill="#d9eeef"
                                     Margin="0,0,0,0"
                                     HorizontalAlignment="Left"/>
                            <Ellipse x:Name="RadioDot"
                                     Width="9"
                                     Height="9"
                                     Fill="#03888f"
                                     Margin="3,0,0,0"
                                     HorizontalAlignment="Left"
                                     Visibility="Collapsed"/>
                            <ContentPresenter Margin="20,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="RadioDot" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#edf6f7"></Setter>
                    <Setter Property="Foreground" Value="#027177"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10,5,10,5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#edf6f7"></Setter>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
        </Style>
        <Style x:Key="IntegerUpDownStyle" TargetType="xctk:IntegerUpDown">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="#efdaee"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#d9eeef"/>
            <Setter Property="Foreground" Value="#03888f"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#03888f"></Setter>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="border"
                            Grid.Column="0"
                            CornerRadius="10,5,10,5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter x:Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding ComboBox.SelectedItem}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ToggleButton BorderThickness="1" BorderBrush="#03888f" Background="Transparent" Grid.Column="1" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border" 
                                            Grid.ColumnSpan="2"
                                            CornerRadius="10,5,10,5"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                            <Path x:Name="Arrow"
                                          Grid.Column="1"     
                                          VerticalAlignment="Center"
                                          Margin="0,0,6,0"     
                                          Fill="#03888f"
                                          Data="M 0 0 L 4 4 L 8 0 Z" />
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" AllowsTransparency="True" Focusable="True">
                                <Border x:Name="popupBorder"
                                Background="#edf6f7"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="100"
                                CornerRadius="10,5,10,5">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                                <Setter Property="BorderBrush" Value="#03888f"></Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                                <Setter Property="IsDropDownOpen" Value="False"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CancelCommand}"></KeyBinding>
        <KeyBinding Key="C" Modifiers="Shift" Command="{Binding ConfirmCommand}"></KeyBinding>
        <KeyBinding Key="D" Modifiers="Shift" Command="{Binding DemoCommand}"></KeyBinding>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="56*"/>
            <RowDefinition Height="139*"/>
        </Grid.RowDefinitions>
        <Label FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,12,0,0" Grid.RowSpan="2" Foreground="#03888f">Create accommodation</Label>
        <Label Content="Name:" FontSize="15" Margin="44,58,49,25" Grid.RowSpan="2" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Country:" FontSize="15" Margin="44,138,49,25" Grid.RowSpan="2" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="City:" FontSize="15" Margin="181,138,49,25" Grid.RowSpan="2" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Accommodation type:" FontSize="15" Margin="44,20,49,25" Grid.Row="1" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Max number of guests:" FontSize="15" Margin="44,80,49,25" Grid.Row="1" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Min staying days:" FontSize="15" Margin="44,155,49,25" Grid.Row="1" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Cancellation threshold:" FontSize="15" Margin="44,220,49,25" Grid.Row="1" Style="{StaticResource LabelStyle}"></Label>
        <Label Content="Image URL (split by comma):" FontSize="15" Margin="44,290,49,25" Grid.Row="1" Style="{StaticResource LabelStyle}"></Label>
        <TextBox x:Name="Name" Margin="49,59,49,40" Width="256" Height="28" Focusable="True" HorizontalAlignment="Left" VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <TextBox.Text>
                <Binding Path="AccommodationToCreate.Name" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <val:EmptyStringValidation/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <ComboBox x:Name="Country" ItemsSource="{Binding Countries, UpdateSourceTrigger=PropertyChanged}" IsTextSearchEnabled="True" Margin="49,78,169,394" Grid.RowSpan="2" VerticalContentAlignment="Center" Height="29" Width="120" HorizontalAlignment="Left" Style="{StaticResource ComboBoxStyle}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <ComboBox.SelectedItem>
                <Binding Path="LocationToCreate.Country" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True"/>
            </ComboBox.SelectedItem>
        </ComboBox>
        <ComboBox x:Name="City" ItemsSource="{Binding Cities, UpdateSourceTrigger=PropertyChanged}" IsTextSearchEnabled="True" Margin="185,78,49,394" Grid.RowSpan="2" VerticalContentAlignment="Center" Height="29" Width="120" HorizontalAlignment="Left"  Style="{StaticResource ComboBoxStyle}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <ComboBox.SelectedItem>
                <Binding Path="LocationToCreate.City" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True"/>
            </ComboBox.SelectedItem>
        </ComboBox>
        <RadioButton x:Name="Accommodation" GroupName="Accommodation Type" IsChecked="{Binding AccommodationToCreate.Type, Converter={StaticResource RadioToEnumConverter}, ConverterParameter=Apartment, ValidatesOnDataErrors=True}" Content="Apartment" FontSize="13" Margin="49,-40,49,331" Height="28" Width="auto" Grid.Row="1" VerticalContentAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource RadioButtonStyle}"></RadioButton>
        <RadioButton x:Name="House" GroupName="Accommodation Type" IsChecked="{Binding AccommodationToCreate.Type, Converter={StaticResource RadioToEnumConverter}, ConverterParameter=House, ValidatesOnDataErrors=True}" Content="House" FontSize="13" Margin="49,-40,49,331" Height="28" Width="auto" Grid.Row="1" VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource RadioButtonStyle}"></RadioButton>
        <RadioButton x:Name="Cottage" GroupName="Accommodation Type" IsChecked="{Binding AccommodationToCreate.Type, Converter={StaticResource RadioToEnumConverter}, ConverterParameter=Cottage, ValidatesOnDataErrors=True}" Content="Cottage" FontSize="13" Margin="49,-40,53,331" Height="28" Width="auto" Grid.Row="1" VerticalContentAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource RadioButtonStyle}"></RadioButton>
        <xctk:IntegerUpDown  x:Name="MaxGuests" Margin="49,29,49,276" Height="28" Width="256" Grid.Row="1" Minimum="1" VerticalContentAlignment="Center" Style="{StaticResource IntegerUpDownStyle}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <xctk:IntegerUpDown.Value>
                <Binding Path="AccommodationToCreate.MaxGuestNum" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                </Binding>
            </xctk:IntegerUpDown.Value>
        </xctk:IntegerUpDown>
        <xctk:IntegerUpDown x:Name="MinStayingDays" Margin="49,118,49,216" Height="28" Width="256" Grid.Row="1" Minimum="1" VerticalContentAlignment="Center" Style="{StaticResource IntegerUpDownStyle}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <xctk:IntegerUpDown.Value>
                <Binding Path="AccommodationToCreate.MinStayingDays" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                </Binding>
            </xctk:IntegerUpDown.Value>
        </xctk:IntegerUpDown>
        <xctk:IntegerUpDown x:Name="CancellationThreshold" Margin="49,187,49,156" Height="28" Width="256" Grid.Row="1" Minimum="1" VerticalContentAlignment="Center" Style="{StaticResource IntegerUpDownStyle}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <xctk:IntegerUpDown.Value>
                <Binding Path="AccommodationToCreate.CancellationThreshold" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                </Binding>
            </xctk:IntegerUpDown.Value>
        </xctk:IntegerUpDown>
        <TextBox x:Name="Url" Margin="49,275,49,91" Height="28" Width="256" Grid.Row="1" VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <TextBox.Text>
                <Binding Path="ImageToCreate.Url" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <val:EmptyStringValidation></val:EmptyStringValidation>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button x:Name="Confirm" Command="{Binding ConfirmCommand}" Content="Confirm(Shift+C)" FontSize="16" Height="38" Margin="49,413,49,25" Grid.Row="1" Style="{StaticResource ButtonStyle}"></Button>
        <Button x:Name="Demo" Command="{Binding DemoCommand}" Content="Demo(Shift+D)" FontSize="16" Height="38" Margin="49,313,49,25" Grid.Row="1" Style="{StaticResource ButtonStyle}"></Button>
        
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#acdcdc" Offset="0.6"></GradientStop>
                <GradientStop Color="#d9eeef" Offset="0.1"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>
    </Grid>
</Window>
